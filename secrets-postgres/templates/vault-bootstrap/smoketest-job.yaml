{{- if or (.Values.global.regressionEnabled) (.Values.global.vaultBootstrap.smoketestEnabled) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-bootstrap-smoke-test
spec:
  template:
    metadata:
      name: vault-bootstrap-smoke-test
      labels:
{{- tpl (toYaml .Values.test.podLabels) . | replace "'" "" | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.test.rbac.namePrefix }}-sa
      {{- include "images.pullSecrets" . | nindent 6 }}
      containers:
        - name: vault-bootstrap-smoke-test-container
          image: {{ include "secrets.image.name" (dict "name" .Values.test.image.name "globals" .Values.global.components "repo" .Values.global.repository) }}
          imagePullPolicy: {{ .Values.test.image.pullPolicy }}
          command: ['/bin/sh', '-c']
          # Sleep before test to allow netpol and istio-proxy to take effect
          # Sleep after the test is to enable pipeline to copy the test result when pod is running state
          args:
            - |
              sleep 60; echo All dependent components are running. Start testing!;
              java -jar tests.jar {{ .Values.test.testsuite }}; sleep 60;
              if wget -q --post-data='' -S -O /dev/null http://127.0.0.1:15020/quitquitquit 2>/dev/null; then
                  echo "Terminated istio-proxy."
              fi
      initContainers:
        - name: init-vault
          image: {{ include "secrets.image.name" (dict "name" "kubectl" "globals" .Values.global.components "repo" .Values.global.repository) }}
          imagePullPolicy: {{ .Values.test.image.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
          command:
            - sh
            - -c
            - |
              echo 'Waiting for Vault bootstrap job to complete...'
              until kubectl get jobs -n {{ .Release.Namespace }} vault-bootstrap -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}' | grep True ; do sleep 5 ; done
              echo 'Vault bootstrap OK âœ“'
      restartPolicy: Never

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.test.rbac.namePrefix }}-sa

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Values.test.rbac.namePrefix }}-role
rules:
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: [ "batch" ]
    resources: [ "jobs" ]
    resourceNames: [ "vault-bootstrap" ]
    verbs: [ "list","get","watch" ]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.test.rbac.namePrefix }}-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.test.rbac.namePrefix }}-role
subjects:
  - kind: ServiceAccount
    name: {{ .Values.test.rbac.namePrefix }}-sa
    namespace: {{ .Release.Namespace }}

{{- end }}
