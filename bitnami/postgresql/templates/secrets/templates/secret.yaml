{{- $services := list -}}
{{- range .Values.global.services }}
{{- if .vault }}
  {{- $services = append $services . }}
{{- end }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.postgresql.auth.secretName }}
  labels:
    app: hzp
type: Opaque
data:
  postgres-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "postgres-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzpadmin-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzpadmin-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  fusion_db-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "fusion_db-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  fusion_plugins-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "fusion_plugins-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  blueprints-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "blueprints-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  fusion_secrets-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "fusion_secrets-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  fusion_drift_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "fusion_drift_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  keycloak-db-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "keycloak-db-password" "providedValues" (list "global.postgresql.auth.keycloakDbPassword") "context" $) | quote }}
  datacollection-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "datacollection-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  est_owner_db-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "est_owner_db-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  est_rv_db-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "est_rv_db-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_eo_initialization_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_eo_initialization_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_eo_proxy-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_eo_proxy-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_fido_onboarding_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_fido_onboarding_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_fru_cru-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_fru_cru-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_healthcheck-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_healthcheck-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_iam_session_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_iam_session_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_iam_policy_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_iam_policy_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_attestation_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_attestation_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_inventory-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_inventory-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_job_service-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_job_service-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_oe_template_mgr-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_oe_template_mgr-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_upgrade_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_upgrade_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_catalog_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_catalog_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_tags_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_tags_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_compute_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_compute_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_notification_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_notification_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_rules-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_rules-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_scheduler-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_scheduler-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_certificate_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_certificate_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  hzp_event_svc-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "hzp_event_svc-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  {{- if .Values.global.test.enabled }}
  test-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.postgresql.auth.secretName "key" "test-password" "providedValues" (list "global.postgresql.auth.postgresPassword") "context" $) | quote }}
  {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.keycloak.auth.secretName }}
  labels:
    app: hzp
type: Opaque
data:
  {{- if .Values.global.keycloak.deploy }}
  keycloak-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.keycloak.auth.secretName "key" "keycloak-password" "providedValues" (list "global.keycloak.auth.keycloakAdminPassword")  "strong" true "context" $) | quote  }}
  {{- end }}
  security-admin-usr-pwd: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.keycloak.auth.secretName "key" "security-admin-usr-pwd" "providedValues" (list "global.keycloak.auth.keycloakSecurityAdminUsrPassword")  "strong" true "context" $) | quote }}
  auth-client-pwd: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.keycloak.auth.secretName "key" "auth-client-pwd" "providedValues" (list "global.keycloak.auth.keycloakAuthClientPassword") "length" 32 "strong" true "context" $) | quote }}
  iam-client-pwd: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.keycloak.auth.secretName "key" "iam-client-pwd" "providedValues" (list "global.keycloak.auth.keycloakIAMClientPassword") "length" 32 "strong" true "context" $) | quote }}
  delco-client-pwd: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.keycloak.auth.secretName "key" "delco-client-pwd" "providedValues" (list "global.keycloak.auth.keycloakDELCOClientPassword") "length" 32 "strong" true "context" $) | quote }}
  iam-client-name: {{ "hzp-iam-client" | b64enc | quote }}
  auth_client-name: {{ "hzp-auth-client" | b64enc | quote }}
  delco-client-name: {{ "hzp-delco-client" | b64enc | quote }}
{{- if not .Values.global.keycloak.deploy }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.keycloak.bootstrapCredentials.secretName }}
  labels:
    app: hzp
type: Opaque
data:
  ext-keycloak-username: {{ required "Username of external keycloak is required" .Values.global.keycloak.bootstrapCredentials.extUsername | b64enc | quote }}
  ext-keycloak-password: {{ required "Password of external keycloak is required" .Values.global.keycloak.bootstrapCredentials.extPassword }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.pgadmin.auth.secretName }}
  labels:
    app: hzp
type: Opaque
data:
  pgadmin-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.pgadmin.auth.secretName "key" "pgadmin-password" "providedValues" (list "global.pgadmin.auth.pgAdminPassword") "context" $) | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.fido.auth.secretName }}
  labels:
    app: hzp
type: Opaque
data:
  encrypt-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.fido.auth.secretName "key" "encrypt-password" "providedValues" (list "global.fido.auth.encryptPassword") "context" $) | quote }}
  api-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.fido.auth.secretName "key" "api-password" "providedValues" (list "global.fido.auth.apiPassword") "context" $) | quote }}
  ssl-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.fido.auth.secretName "key" "ssl-password" "providedValues" (list "global.fido.auth.sslPassword") "context" $) | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.workflowEngine.auth.secretName }}
  labels:
    app: hzp
type: Opaque
data:
  api-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.workflowEngine.auth.secretName "key" "api-password" "providedValues" (list "global.workflowEngine.auth.apiPassword") "context" $) | quote }}
  k3s-config: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.workflowEngine.auth.secretName "key" "k3s-config" "providedValues" (list "global.workflowEngine.auth.k3sConfigSecretValue") "context" $) | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.catalog.auth.secretName }}
  labels:
    app: hzp
  annotations:
    helm.sh/hook: pre-install
type: Opaque
stringData:
  cipher-key: {{ randAlphaNum 32 | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.catalog.auth.vaultSecretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.vault.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.ssh.auth.secretName }}
  labels:
    app: hzp
type: Opaque
data:
  ssh-password: {{ include "common.secrets.passwords.manage" (dict "secret" .Values.global.ssh.auth.secretName "key" "ssh-password" "providedValues" (list "global.ssh.auth.sshPassword") "context" $) | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.certificate.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.recovery.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.onboarding.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.initialization.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.product.auth.secretName }}
  labels:
    app: hzp
type: Opaque
data:
  vms-access-token-endpt: {{ .Values.global.product.auth.vmsAccessTokenEndpt | b64enc }}
  vms-access-token-type: {{ .Values.global.product.auth.vmsAccessTokenType | b64enc }}
  vms-access-token-user: {{ .Values.global.product.auth.vmsAccessTokenUser | b64enc}}
  vms-access-token-pass: {{ .Values.global.product.auth.vmsAccessTokenPass | b64enc }}
  vms-xfer-voucher-endpt: {{ .Values.global.product.auth.vmsXferVoucherEndpt | b64enc }}
  vms-xfer-voucher-type: {{ .Values.global.product.auth.vmsXferVoucherType | b64enc }}
  vms-xfer-voucher-oauth: {{ .Values.global.product.auth.vmsXferVoucherOauth | b64enc }}
  vms-xfer-voucher-app-id: {{ .Values.global.product.auth.vmsXferVoucherAppId | b64enc }}
  vms-xfer-voucher-secret: {{ .Values.global.product.auth.vmsXferVoucherSecret | b64enc }}
  srs-client-id: {{ .Values.global.product.auth.srsClientId | b64enc }}
  srs-client-secret: {{ .Values.global.product.auth.srsClientSecret | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.fru.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.inventory.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.mist.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.owner.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.spire.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.upgrade.auth.secretName }}
  labels:
    app: hzp
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.fusion.auth.secretName }}
  labels:
    app: hzp
type: Opaque
{{- range $services}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}-vault-secret
  labels:
    app: hzp
type: Opaque
{{- end }}
