replicaCount: 2
#autoscaling:
#  enabled: false
#  minReplicas: "2"
#  maxReplicas: "4"

resources:
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 2
    memory: 1024Mi

service:
  type: ClusterIP
  ports:
    http: 8080
    https: 8443
  
ingress:
  ## @param ingress.enabled Set to true to enable ingress record generation
  ##
  enabled: true
  hostname: dsp-portal.staging.sp.dell.com
  path: /*
  annotations:
    external-dns.alpha.kubernetes.io/hostname: dsp-portal.staging.sp.dell.com
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/group.name: saas-dsp-portal-staging
    alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:eu-west-1:816069151864:certificate/b11d162c-f8b2-4b7d-a722-524da4b7f639'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
    alb.ingress.kubernetes.io/healthcheck-port: '8080'
    alb.ingress.kubernetes.io/healthcheck-protocol: 'HTTP'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthcheck-path: /

  ingressClassName: "alb"

containerSecurityContext:
  runAsNonRoot: false

containerPorts:
  http: 8080
  https: 8443
  
serverBlock: |-
  server {
    listen 0.0.0.0:8080;
    location /service-a {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://dsp-portal-service-a:5000/health;
    }
    location /gui {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://dsp-portal-gui:3000/health;
    }
    location /service-b {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://dsp-portal-service-b:5000/health;
    }
  }
  