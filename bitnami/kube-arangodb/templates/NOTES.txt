CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

Did you know there are enterprise versions of the Bitnami catalog? For enhanced secure software supply chain features, unlimited pulls from Docker, LTS support, or application customization, see Bitnami Premium or Tanzu Application Catalog. See https://www.arrow.com/globalecs/na/vendors/bitnami for more information.

** Please be patient while the chart is being deployed **

{{- if .Values.diagnosticMode.enabled }}

The chart has been deployed in diagnostic mode. All probes have been disabled and the command has been overwritten with:

  command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 4 }}
  args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 4 }}

Get the list of pods by executing:

    kubectl get pods --namespace {{ include "common.names.namespace" . }} -l app.kubernetes.io/instance={{ .Release.Name }}

Access the pod you want to debug by executing

    kubectl exec --namespace {{ include "common.names.namespace" . }} -ti <NAME OF THE POD> -- bash

{{- else }}

Check the status of the pods by running this command:

  kubectl get pods --namespace {{ include "common.names.namespace" . | quote }} -l app.kubernetes.io/instance={{ .Release.Name }}

Check the kube-arangodb documentation for instructions on how to deploy ArangoDeployments and other *.arangodb.com objects:

https://arangodb.github.io/kube-arangodb/

{{- if .Values.rbac.create }}
{{- if (eq .Values.scope "legacy") }}
WARNING: ArangoDB Kubernetes Operator can access all secrets in the cluster. This could pose a security risk if the application gets compromised.

You can limit allowed namespaces by setting scope = "namespaced"
{{- else }}

RabbitMQ Cluster Operator can ONLY access resources in the {{ include "common.names.namespace" . }} namespace:

ArangoDB Kubernetes Operator won't be able to access resources in other namespaces. You can configure this behavior by setting scope = "legacy"

{{- end }}
{{- end }}
{{- end }}

{{- include "common.warnings.rollingTag" .Values.image }}
{{- include "common.warnings.rollingTag" .Values.arangodbImage }}
{{- include "kube-arangodb.validateValues" . }}
{{- include "common.warnings.resources" (dict "sections" (list "") "context" $) }}
{{- include "common.warnings.modifiedImages" (dict "images" (list .Values.arangodbImage .Values.image) "context" $) }}
{{- include "common.errors.insecureImages" (dict "images" (list .Values.arangodbImage .Values.image) "context" $) }}
